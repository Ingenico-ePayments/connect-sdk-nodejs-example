<!DOCTYPE html>
<html lang="en">
<!--
   This file was auto-generated from the API references found at
   https://epayments-api.developer-ingenico.com/s2sapi/v1/
-->

<head>
  <title>Ingenico Node.js S2S example</title>
  <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <style>
    .output-wrapper {
      display: none;
    }
  </style>
</head>

<body>
  <div class="container">
    <div class="row">
      <div class="col-xs-12">
        <h1>Node.js S2S SDK explorer</h1>
        <p>You can explore the various calls of the Node.js S2S SDK by clicking the method in the menu; the response will
          be rendered when the call finishes. This tool is for development use only and must never be made public.</p>
      </div>
    </div>
    <div class="row">
      <div class="col-xs-12 col-md-3">
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingHostedCheckouts">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseHostedCheckouts" aria-expanded="true" aria-controls="collapseHostedCheckouts">
                  Hosted Checkouts
                </a>
              </h4>
            </div>
            <div id="collapseHostedCheckouts" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingHostedCheckouts">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="createHostedCheckout">Create hosted checkout</a></li>
                <li class="list-group-item"><a href="#" data-operation="getHostedCheckout">Get hosted checkout status</a></li>
                <li class="list-group-item"><a href="#" data-operation="deleteHostedCheckout">Delete hosted checkout</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingHostedMandateManagement">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseHostedMandateManagement" aria-expanded="true" aria-controls="collapseHostedMandateManagement">
                  Hosted Mandate Management
                </a>
              </h4>
            </div>
            <div id="collapseHostedMandateManagement" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingHostedMandateManagement">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="createHostedMandateManagement">Create hosted mandate management</a></li>
                <li class="list-group-item"><a href="#" data-operation="getHostedMandateManagement">Get hosted mandate management</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingPayments">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapsePayments" aria-expanded="true" aria-controls="collapsePayments">
                  Payments
                </a>
              </h4>
            </div>
            <div id="collapsePayments" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingPayments">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="createPayment">Create payment</a></li>
                <li class="list-group-item"><a href="#" data-operation="findPayments">Find payments</a></li>
                <li class="list-group-item"><a href="#" data-operation="getPayment">Get payment</a></li>
                <li class="list-group-item"><a href="#" data-operation="completePayment">Complete payment</a></li>
                <li class="list-group-item"><a href="#" data-operation="getThirdPartyStatus">Third party status</a></li>
                <li class="list-group-item"><a href="#" data-operation="tokenizePayment">Create a token from payment</a></li>
                <li class="list-group-item"><a href="#" data-operation="processChallengedPayment">Approves challenged payment</a></li>
                <li class="list-group-item"><a href="#" data-operation="approvePayment">Approve payment</a></li>
                <li class="list-group-item"><a href="#" data-operation="capturePayment">Capture payment</a></li>
                <li class="list-group-item"><a href="#" data-operation="cancelApprovalPayment">Undo capture payment request</a></li>
                <li class="list-group-item"><a href="#" data-operation="getPaymentCaptures">Get captures of payment</a></li>
                <li class="list-group-item"><a href="#" data-operation="refundPayment">Create refund</a></li>
                <li class="list-group-item"><a href="#" data-operation="getRefunds">Get refunds of payment</a></li>
                <li class="list-group-item"><a href="#" data-operation="cancelPayment">Cancel payment</a></li>
                <li class="list-group-item"><a href="#" data-operation="createPaymentDispute">Create dispute</a></li>
                <li class="list-group-item"><a href="#" data-operation="getPaymentDisputes">Get disputes</a></li>
                <li class="list-group-item"><a href="#" data-operation="getPaymentDeviceFingerprintDetails">Get device fingerprint details</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingCaptures">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseCaptures" aria-expanded="true" aria-controls="collapseCaptures">
                  Captures
                </a>
              </h4>
            </div>
            <div id="collapseCaptures" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingCaptures">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="getCapture">Get capture</a></li>
                <li class="list-group-item"><a href="#" data-operation="createRefundCapture">Create Refund</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingRefunds">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseRefunds" aria-expanded="true" aria-controls="collapseRefunds">
                  Refunds
                </a>
              </h4>
            </div>
            <div id="collapseRefunds" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingRefunds">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="findRefunds">Find refunds</a></li>
                <li class="list-group-item"><a href="#" data-operation="getRefund">Get refund</a></li>
                <li class="list-group-item"><a href="#" data-operation="approveRefund">Approve refund</a></li>
                <li class="list-group-item"><a href="#" data-operation="cancelRefund">Cancel refund</a></li>
                <li class="list-group-item"><a href="#" data-operation="cancelApprovalRefund">Undo approve refund</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingDisputes">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseDisputes" aria-expanded="true" aria-controls="collapseDisputes">
                  Disputes
                </a>
              </h4>
            </div>
            <div id="collapseDisputes" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingDisputes">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="getDispute">Get Dispute</a></li>
                <li class="list-group-item"><a href="#" data-operation="submitDispute">Submit Dispute</a></li>
                <li class="list-group-item"><a href="#" data-operation="cancelDispute">Cancel Dispute</a></li>
                <li class="list-group-item"><a href="#" data-operation="uploadDisputeFile">Upload File</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingPayouts">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapsePayouts" aria-expanded="true" aria-controls="collapsePayouts">
                  Payouts
                </a>
              </h4>
            </div>
            <div id="collapsePayouts" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingPayouts">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="createPayout">Create payout</a></li>
                <li class="list-group-item"><a href="#" data-operation="findPayouts">Find payouts</a></li>
                <li class="list-group-item"><a href="#" data-operation="getPayout">Get payout</a></li>
                <li class="list-group-item"><a href="#" data-operation="approvePayout">Approve payout</a></li>
                <li class="list-group-item"><a href="#" data-operation="cancelPayout">Cancel payout</a></li>
                <li class="list-group-item"><a href="#" data-operation="cancelApprovalPayout">Undo approve payout</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingProductGroups">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseProductGroups" aria-expanded="true" aria-controls="collapseProductGroups">
                  Product Groups
                </a>
              </h4>
            </div>
            <div id="collapseProductGroups" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingProductGroups">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="getPaymentProductGroups">Get payment product groups</a></li>
                <li class="list-group-item"><a href="#" data-operation="getPaymentProductGroup">Get payment product group</a></li>
                <li class="list-group-item"><a href="#" data-operation="getDeviceFingerprintForGroups">Get device fingerprint</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingProducts">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseProducts" aria-expanded="true" aria-controls="collapseProducts">
                  Products
                </a>
              </h4>
            </div>
            <div id="collapseProducts" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingProducts">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="getPaymentProducts">Get payment products</a></li>
                <li class="list-group-item"><a href="#" data-operation="getPaymentProduct">Get payment product</a></li>
                <li class="list-group-item"><a href="#" data-operation="getDirectory">Get payment product directory</a></li>
                <li class="list-group-item"><a href="#" data-operation="getCustomerDetails">Get customer details</a></li>
                <li class="list-group-item"><a href="#" data-operation="getDeviceFingerprint">Get device fingerprint</a></li>
                <li class="list-group-item"><a href="#" data-operation="getNetworks">Get payment product networks</a></li>
                <li class="list-group-item"><a href="#" data-operation="createPaymentProductSession">Create payment product session</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingRiskAssessments">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseRiskAssessments" aria-expanded="true" aria-controls="collapseRiskAssessments">
                  Risk assessments
                </a>
              </h4>
            </div>
            <div id="collapseRiskAssessments" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingRiskAssessments">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="riskAssessmentBankAccount">Risk-assess bankaccount</a></li>
                <li class="list-group-item"><a href="#" data-operation="riskAssessmentCards">Risk-assess card</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingServices">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseServices" aria-expanded="true" aria-controls="collapseServices">
                  Services
                </a>
              </h4>
            </div>
            <div id="collapseServices" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingServices">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="convertAmount">Convert amount</a></li>
                <li class="list-group-item"><a href="#" data-operation="convertBankAccount">Convert bankaccount</a></li>
                <li class="list-group-item"><a href="#" data-operation="iinDetails">Get IIN details</a></li>
                <li class="list-group-item"><a href="#" data-operation="getPrivacyPolicy">Get Privacy Policy</a></li>
                <li class="list-group-item"><a href="#" data-operation="testConnection">Test connection</a></li>
                <li class="list-group-item"><a href="#" data-operation="getSettlementDetails">Get Settlement details</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingTokens">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTokens" aria-expanded="true" aria-controls="collapseTokens">
                  Tokens
                </a>
              </h4>
            </div>
            <div id="collapseTokens" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTokens">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="createToken">Create token</a></li>
                <li class="list-group-item"><a href="#" data-operation="getToken">Get token</a></li>
                <li class="list-group-item"><a href="#" data-operation="updateToken">Update token</a></li>
                <li class="list-group-item"><a href="#" data-operation="deleteToken">Delete token</a></li>
                <li class="list-group-item"><a href="#" data-operation="approveSepaDirectDebitToken">Approve SEPA DD mandate</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingMandates">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseMandates" aria-expanded="true" aria-controls="collapseMandates">
                  Mandates
                </a>
              </h4>
            </div>
            <div id="collapseMandates" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingMandates">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="createMandate">Create mandate</a></li>
                <li class="list-group-item"><a href="#" data-operation="createMandateWithReference">Create mandate with mandatereference</a></li>
                <li class="list-group-item"><a href="#" data-operation="getMandate">Get mandate</a></li>
                <li class="list-group-item"><a href="#" data-operation="blockMandate">Block mandate</a></li>
                <li class="list-group-item"><a href="#" data-operation="unblockMandate">Unblock mandate</a></li>
                <li class="list-group-item"><a href="#" data-operation="revokeMandate">Revoke mandate</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingSessions">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseSessions" aria-expanded="true" aria-controls="collapseSessions">
                  Sessions
                </a>
              </h4>
            </div>
            <div id="collapseSessions" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingSessions">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="createSession">Create session</a></li>
              </ul>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingFiles">
              <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseFiles" aria-expanded="true" aria-controls="collapseFiles">
                  Files
                </a>
              </h4>
            </div>
            <div id="collapseFiles" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingFiles">
              <ul class="list-group">
                <li class="list-group-item"><a href="#" data-operation="getFile">Get File</a></li>
              </ul>
            </div>
          </div>
        </div>
      </div>
      <div class="col-xs-12 col-md-9 output-wrapper">
        <p>Status: <span id="outputStatusCode"></span>, Roundtrip: <span id="roundTrip"></span> ms</p>
        <pre id="output"></pre>
      </div>
    </div>
  </div>

  <div class="modal fade" tabindex="-1" role="dialog" id="themodal">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title">Enter input</h4>
        </div>
        <div class="modal-body">
          <form class="form-horizontal" id="inputs">
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" id="sendOverlay">Send</button>
        </div>
      </div>
    </div>
  </div>

  <script src="//code.jquery.com/jquery-2.2.2.min.js" integrity="sha256-36cp2Co+/62rEAAYHLmRCPIych47CvdM+uTBJwSzWjI=" crossorigin="anonymous"></script>
  <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
  <script>
    $(function () {
      var clicked = {};

      // initial values for query parameters
      var inputValues = {
        currencyCode: "EUR",
        countryCode: "NL",
        locale: "en_GB",
        amount: 1000,
        isRecurring: true,
        source: "USD",
        target: "EUR",
        mandateCancelDate: "20160503",
        offset: 0,
        limit: 10
      };

      var operations = {};
      operations.createHostedCheckout = {
        href: "/hostedcheckouts/create",
        uriParameters: [  ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getHostedCheckout = {
        href: "/hostedcheckouts/get",
        uriParameters: [ "hostedCheckoutId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.deleteHostedCheckout = {
        href: "/hostedcheckouts/delete",
        uriParameters: [ "hostedCheckoutId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.createHostedMandateManagement = {
        href: "/hostedmandatemanagements/create",
        uriParameters: [  ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getHostedMandateManagement = {
        href: "/hostedmandatemanagements/get",
        uriParameters: [ "hostedMandateManagementId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.createPayment = {
        href: "/payments/create",
        uriParameters: [  ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.findPayments = {
        href: "/payments/find",
        uriParameters: [  ],
        queryParameters: [ "hostedCheckoutId", "merchantReference", "merchantOrderId", "offset", "limit" ],
        formParameters: {  }
      };
      operations.getPayment = {
        href: "/payments/get",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.completePayment = {
        href: "/payments/complete",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getThirdPartyStatus = {
        href: "/payments/thirdPartyStatus",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.tokenizePayment = {
        href: "/payments/tokenize",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.processChallengedPayment = {
        href: "/payments/processchallenged",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.approvePayment = {
        href: "/payments/approve",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.capturePayment = {
        href: "/payments/capture",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.cancelApprovalPayment = {
        href: "/payments/cancelapproval",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getPaymentCaptures = {
        href: "/payments/captures",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.refundPayment = {
        href: "/payments/refund",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getRefunds = {
        href: "/payments/refunds",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.cancelPayment = {
        href: "/payments/cancel",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.createPaymentDispute = {
        href: "/payments/dispute",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getPaymentDisputes = {
        href: "/payments/disputes",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getPaymentDeviceFingerprintDetails = {
        href: "/payments/devicefingerprint",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getCapture = {
        href: "/captures/get",
        uriParameters: [ "captureId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.createRefundCapture = {
        href: "/captures/refund",
        uriParameters: [ "captureId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.findRefunds = {
        href: "/refunds/find",
        uriParameters: [  ],
        queryParameters: [ "hostedCheckoutId", "merchantReference", "merchantOrderId", "offset", "limit" ],
        formParameters: {  }
      };
      operations.getRefund = {
        href: "/refunds/get",
        uriParameters: [ "refundId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.approveRefund = {
        href: "/refunds/approve",
        uriParameters: [ "refundId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.cancelRefund = {
        href: "/refunds/cancel",
        uriParameters: [ "refundId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.cancelApprovalRefund = {
        href: "/refunds/cancelapproval",
        uriParameters: [ "refundId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getDispute = {
        href: "/disputes/get",
        uriParameters: [ "disputeId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.submitDispute = {
        href: "/disputes/submit",
        uriParameters: [ "disputeId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.cancelDispute = {
        href: "/disputes/cancel",
        uriParameters: [ "disputeId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.uploadDisputeFile = {
        href: "/disputes/uploadFile",
        uriParameters: [ "disputeId" ],
        queryParameters: [  ],
        formParameters: { "file": "file" }
      };
      operations.createPayout = {
        href: "/payouts/create",
        uriParameters: [  ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.findPayouts = {
        href: "/payouts/find",
        uriParameters: [  ],
        queryParameters: [ "merchantReference", "merchantOrderId", "offset", "limit" ],
        formParameters: {  }
      };
      operations.getPayout = {
        href: "/payouts/get",
        uriParameters: [ "payoutId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.approvePayout = {
        href: "/payouts/approve",
        uriParameters: [ "payoutId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.cancelPayout = {
        href: "/payouts/cancel",
        uriParameters: [ "payoutId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.cancelApprovalPayout = {
        href: "/payouts/cancelapproval",
        uriParameters: [ "payoutId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getPaymentProductGroups = {
        href: "/productgroups/find",
        uriParameters: [  ],
        queryParameters: [ "countryCode", "currencyCode", "locale", "amount", "isRecurring", "hide" ],
        formParameters: {  }
      };
      operations.getPaymentProductGroup = {
        href: "/productgroups/get",
        uriParameters: [ "paymentProductGroupId" ],
        queryParameters: [ "countryCode", "currencyCode", "locale", "amount", "isRecurring", "hide" ],
        formParameters: {  }
      };
      operations.getDeviceFingerprintForGroups = {
        href: "/productgroups/deviceFingerprint",
        uriParameters: [ "paymentProductGroupId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getPaymentProducts = {
        href: "/products/find",
        uriParameters: [  ],
        queryParameters: [ "countryCode", "currencyCode", "locale", "amount", "isRecurring", "hide" ],
        formParameters: {  }
      };
      operations.getPaymentProduct = {
        href: "/products/get",
        uriParameters: [ "paymentProductId" ],
        queryParameters: [ "countryCode", "currencyCode", "locale", "amount", "isRecurring", "hide", "forceBasicFlow" ],
        formParameters: {  }
      };
      operations.getDirectory = {
        href: "/products/directory",
        uriParameters: [ "paymentProductId" ],
        queryParameters: [ "countryCode", "currencyCode" ],
        formParameters: {  }
      };
      operations.getCustomerDetails = {
        href: "/products/customerDetails",
        uriParameters: [ "paymentProductId", "fiscalNumber" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getDeviceFingerprint = {
        href: "/products/deviceFingerprint",
        uriParameters: [ "paymentProductId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getNetworks = {
        href: "/products/networks",
        uriParameters: [ "paymentProductId" ],
        queryParameters: [ "countryCode", "currencyCode", "amount", "isRecurring" ],
        formParameters: {  }
      };
      operations.createPaymentProductSession = {
        href: "/products/sessions",
        uriParameters: [ "paymentProductId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.riskAssessmentBankAccount = {
        href: "/riskassessments/bankaccounts",
        uriParameters: [  ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.riskAssessmentCards = {
        href: "/riskassessments/cards",
        uriParameters: [  ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.convertAmount = {
        href: "/services/convertAmount",
        uriParameters: [  ],
        queryParameters: [ "source", "target", "amount" ],
        formParameters: {  }
      };
      operations.convertBankAccount = {
        href: "/services/bankaccount",
        uriParameters: [  ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.iinDetails = {
        href: "/services/getIINdetails",
        uriParameters: [  ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getPrivacyPolicy = {
        href: "/services/privacypolicy",
        uriParameters: [  ],
        queryParameters: [ "locale", "paymentProductId" ],
        formParameters: {  }
      };
      operations.testConnection = {
        href: "/services/testconnection",
        uriParameters: [  ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getSettlementDetails = {
        href: "/services/settlementdetails",
        uriParameters: [ "paymentId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.createToken = {
        href: "/tokens/create",
        uriParameters: [  ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getToken = {
        href: "/tokens/get",
        uriParameters: [ "tokenId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.updateToken = {
        href: "/tokens/update",
        uriParameters: [ "tokenId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.deleteToken = {
        href: "/tokens/delete",
        uriParameters: [ "tokenId" ],
        queryParameters: [ "mandateCancelDate" ],
        formParameters: {  }
      };
      operations.approveSepaDirectDebitToken = {
        href: "/tokens/approvesepadirectdebit",
        uriParameters: [ "tokenId" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.createMandate = {
        href: "/mandates/create",
        uriParameters: [  ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.createMandateWithReference = {
        href: "/mandates/createWithMandateReference",
        uriParameters: [ "uniqueMandateReference" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getMandate = {
        href: "/mandates/get",
        uriParameters: [ "uniqueMandateReference" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.blockMandate = {
        href: "/mandates/block",
        uriParameters: [ "uniqueMandateReference" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.unblockMandate = {
        href: "/mandates/unblock",
        uriParameters: [ "uniqueMandateReference" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.revokeMandate = {
        href: "/mandates/revoke",
        uriParameters: [ "uniqueMandateReference" ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.createSession = {
        href: "/sessions/create",
        uriParameters: [  ],
        queryParameters: [  ],
        formParameters: {  }
      };
      operations.getFile = {
        href: "/files/getFile",
        uriParameters: [ "fileId" ],
        queryParameters: [  ],
        formParameters: {  }
      };

      var currentFileURL = null;

      var isBinaryContent = function (contentType) {
        return contentType
          && !(contentType.length >= 5 && contentType.substring(0, 5) === "text/")
          && contentType.indexOf("json") === -1
          && contentType.indexOf("xml") === -1;
      };
      var isJSON = function (contentType) {
        return !contentType || contentType.indexOf("json") !== -1;
      };
      var getFileName = function (disposition) {
        if (disposition) {
          var dispositionFilenamePattern = /(?:^|;)\s*filename\s*=\s*(.*?)\s*(?:;|$)/i;
          var match = disposition.match(dispositionFilenamePattern);
          if (match) {
            return trimQuotes(match[1]);
          }
        }
        return "unknown";
      };
      var trimQuotes = function (fileName) {
        if (fileName.length < 2) {
          return fileName;
        }
        if ((fileName[0] === '"' && fileName[fileName.length - 1] === '"') || (fileName[0] === "'" && fileName[fileName.length - 1] === "'")) {
          return fileName.substring(1, fileName.length - 1);
        }
        return fileName;
      };

      var renderBinaryContent = function (data, xhr) {
        var contentType = xhr.getResponseHeader("Content-Type");
        var contentLength = xhr.getResponseHeader("Content-Length");
        var contentDisposition = xhr.getResponseHeader("Content-Disposition");
        var fileName = getFileName(contentDisposition);

        $("#output").text("Content-Type: " + (contentType || "-") + "\nContent-Length: " + (contentLength || "-") + "\nContent-Disposition: " + (contentDisposition || "-"));

        var download = $("<a>").text("Save File");
        if (window.navigator.msSaveOrOpenBlob) {
          download.attr("href", "#");
          download.click(function () {
            window.navigator.msSaveOrOpenBlob(data, fileName);
          });
        } else {
          currentFileURL = URL.createObjectURL(data);
          download.attr({"href": currentFileURL, "download": fileName});
        }
        $("#output").append($("<p>")).append(download);
      };
      var renderJSON = function (data) {
        if (data) {
          var reader = new FileReader();
          reader.onloadend = function () {
            var json = JSON.parse(reader.result);
            $("#output").text(JSON.stringify(json, null, "  "));
          };
          reader.readAsText(data);
        } else {
          $("#output").text(" ");
        }
      };
      var renderOther = function (data) {
        if (data) {
          var reader = new FileReader();
          reader.onloadend = function () {
            $("#output").text(reader.result);
          };
          reader.readAsText(data);
        } else {
          $("#output").text(" ");
        }
      };

      var doSend = function (operation, params, files) {
        // Note: jQuery.ajax either does not return binary content correctly, or it does not return an error response.
        // Using XMLHttpRequest directly allows us to ignore the status code and retrieve the response in all cases.
        var xhr = new XMLHttpRequest();

        var url = operation.href;
        var method = "GET";
        var requestData = null;
        var start = new Date().getTime();

        if (params) {
          $.each(operation.uriParameters, function (index, param) {
            var value = typeof params[param] === "undefined" ? "" : params[param];
            url = url + "/" + value;
          });
          $.each(operation.queryParameters, function (index, param) {
            var value = typeof params[param] === "undefined" ? "" : params[param];
            if (value !== "") {
              var separator = url.indexOf("?") == -1 ? "?" : "&";
              url = url + separator + param + "=" + encodeURI(value);
            }
          });
        }

        if (Object.keys(operation.formParameters).length > 0) {
          requestData = new FormData();
          $.each(operation.formParameters, function (name, type) {
            if (type === "file") {
               var file = !files || typeof files[name] === "undefined" ? null : files[name];
               if (file !== null) {
                 requestData.append(name, file);
               }
            } else {
              var value = !params || typeof params[param] === "undefined" ? "" : params[name];
              requestData.append(name, value);
            }
          });
          method = "POST";
        }
        xhr.open(method, url);
        xhr.responseType = "blob";

        $(".output-wrapper").show();
        if (currentFileURL) {
          URL.revokeObjectURL(currentFileURL);
          currentFileURL = null;
        }
        $("#output").text("Loading ...");
        $("#roundTrip").text("-");
        $("#outputStatusCode").text("Loading ...");

        xhr.onload = function () {
          var contentType = xhr.getResponseHeader("Content-Type");
          var responseData = xhr.response;
          if (isBinaryContent(contentType)) {
            renderBinaryContent(responseData, xhr);
          } else if (isJSON(contentType)) {
            renderJSON(responseData);
          } else {
            renderOther(responseData);
          }
          $("#outputStatusCode").text(xhr.status + " " + xhr.statusText);
          $("#roundTrip").text(new Date().getTime() - start);
        };
        xhr.send(requestData);
      };

      $("a[data-operation]").click(function (e) {
        e.preventDefault();
        var operation = operations[$(this).data("operation")];
        var properties = operation.uriParameters.concat(operation.queryParameters);
        properties = properties.concat(Object.keys(operation.formParameters));
        if (properties.length > 0) {
          // fill popup
          clicked = operation;

          // store existing input values
          $("#inputs input").each(function (index, input) {
            if (input.type !== "file") {
              inputValues[$(input).data("key")] = $(input).val();
            }
          });
          // re-create input modal content
          var $inputs = $("#inputs").empty();
          $.each(properties, function (index, property) {
            var id = "i" + (index + 1);
            var prop = property.trim();
            var $label = $("<label>").attr("for", id).addClass("col-sm-3 control-label").text(prop);
            var $input = $("<input>").attr({ "id": id, "placeholder": prop }).addClass("form-control").data("key", prop);
            if (operation.formParameters[prop] === "file") {
              $input.attr("type", "file");
            } else {
              $input.attr("type", "text").val(inputValues[prop]);
            }
            var $formGroup = $("<div>").addClass("form-group").append($label).append($("<div>").addClass("col-sm-9").append($input));
            $inputs.append($formGroup);
          });

          $("#themodal").modal({backdrop: "static"});
        } else {
          doSend(operation);
        }
      });

      $("#themodal").on("shown.bs.modal", function () {
        $("#inputs #i1").focus();
      });

      $("#inputs").on("keydown", "input", function (e) {
        if (e.which == 13) {
          e.preventDefault();
          $("#sendOverlay").click();
        }
      });

      $("#sendOverlay").on("click", function (e) {
        var params = {};
        var files = {};
        $("#inputs input").each(function (index, input) {
          if (input.type == "file") {
            files[$(input).attr("placeholder")] = input.files[0];
          } else {
            params[$(input).attr("placeholder")] = $(input).val();
          }
        });
        doSend(clicked, params, files);
        $("#themodal").modal("hide");
      });
    });
  </script>
</body>
</html>
